{"ast":null,"code":"var _jsxFileName = \"/app/src/components/camera_component.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraComponent = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  useEffect(() => {\n    const startCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error(\"Error accessing the camera\", error);\n      }\n    };\n    startCamera();\n    return () => {\n      if (videoRef.current) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n  const capturePhoto = () => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n\n    // Définir la taille du canvas pour correspondre à la vidéo\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Dessiner le cadre vidéo sur le canvas\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Convertir le canvas en image\n    const imageSrc = canvas.toDataURL('image/png');\n    setImage(imageSrc);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      style: {\n        width: '100%',\n        height: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: capturePhoto,\n      children: \"Prendre une photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Photo Captur\\xE9e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Captured\",\n        style: {\n          width: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(CameraComponent, \"IYHwGsXML9iUBZcH/Njs4XUdGJ0=\");\n_c = CameraComponent;\nexport default CameraComponent;\nvar _c;\n$RefreshReg$(_c, \"CameraComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","CameraComponent","_s","videoRef","canvasRef","image","setImage","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","tracks","getTracks","forEach","track","stop","capturePhoto","canvas","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","imageSrc","toDataURL","children","ref","autoPlay","style","fileName","_jsxFileName","lineNumber","columnNumber","onClick","display","src","alt","_c","$RefreshReg$"],"sources":["/app/src/components/camera_component.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst CameraComponent = () => {\n    const videoRef = useRef(null);\n    const canvasRef = useRef(null);\n    const [image, setImage] = useState(null);\n\n    useEffect(() => {\n        const startCamera = async () => {\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n                if (videoRef.current) {\n                    videoRef.current.srcObject = stream;\n                }\n            } catch (error) {\n                console.error(\"Error accessing the camera\", error);\n            }\n        };\n\n        startCamera();\n\n        return () => {\n            if (videoRef.current) {\n                const tracks = videoRef.current.srcObject.getTracks();\n                tracks.forEach(track => track.stop());\n            }\n        };\n    }, []);\n\n    const capturePhoto = () => {\n        const canvas = canvasRef.current;\n        const video = videoRef.current;\n\n        // Définir la taille du canvas pour correspondre à la vidéo\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n\n        // Dessiner le cadre vidéo sur le canvas\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        // Convertir le canvas en image\n        const imageSrc = canvas.toDataURL('image/png');\n        setImage(imageSrc);\n    };\n\n    return (\n        <div>\n            <video ref={videoRef} autoPlay style={{ width: '100%', height: 'auto' }} />\n            <button onClick={capturePhoto}>Prendre une photo</button>\n            <canvas ref={canvasRef} style={{ display: 'none' }} />\n            {image && (\n                <div>\n                    <h2>Photo Capturée</h2>\n                    <img src={image} alt=\"Captured\" style={{ width: '100%', height: 'auto' }} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default CameraComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}