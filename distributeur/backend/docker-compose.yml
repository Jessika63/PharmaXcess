
services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    ports:
      - "5000:5000"  # Modifier si l'app écoute sur un autre port
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development  # Par exemple, pour un environnement de développement Flask
      - DB_HOST=${DB_HOST}  # Correspond au nom du service MySQL
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}

  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3307:3306"
    container_name: "distributeur-backend-db-1"

  test:
    build:
      context: .
      dockerfile: Docker/Dockerfile.test
    command: ["pytest", "--cov=./", "--cov-report=term-missing", "-vv"]
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=testing
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    profiles:
      - test